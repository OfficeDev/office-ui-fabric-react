/**
 * TODO: Once theming is updated, consider removing all of this.
 *
 * Note: All :root rules must be literals, OR references to variables
 * defined as literals in the same scope. If you refer to variables,
 * they will be resolved on the :root element only; not at usage time.
 * That means if you you fallback hover text to rested text, it won't
 * change if the user overrides rested text.
**/
:root {
  /* sizing */
  --button-padding: 0 20px;
  --button-height: 32px;
  --button-minWidth: 96px;
  --button-maxWidth: 280px;

  --button-borderRadius: 3px;
  --button-contentGap: 10px;
  --button-iconSize: 16px;

  /* borders, focus and shadow */
  --button-borderRadius: 2px;
  --button-borderWidth: 1px;
  --button-boxShadow: 0px 0.2rem 0.4rem -0.075rem rgba(0, 0, 0, 0.1);
  --button-boxShadow-disabled: none;

  /* transforms */
  --button-transform-active: scale(0.95);
  --button-transition: transform 0.1s linear;

  /* TODO: Remove. Fonts should only be defined in the theme. */
  --button-fontFamily: 'Segoe UI', 'Helvetica Neue', 'Apple Color Emoji', 'Segoe UI Emoji', Helvetica, Arial, sans-serif;
  --button-fontSize: 14px;
  --button-fontWeight: 600;

  /* TODO: Remove. Colors should only be defined in the theme. */
  --button-fill: white;
  --button-fill-hover: rgb(237, 235, 233);
  --button-fill-focus: var(--button-fill);
  --button-fill-active: rgb(225, 223, 221);
  --button-fill-disabled: var(--button-fill-hover);
  --button-text: rgb(37, 36, 35);
  --button-text-hover: var(--button-text);
  --button-text-focus: var(--button-text);
  --button-text-active: var(--button-text);
  --button-text-disabled: rgb(200, 198, 196);
  --button-borderColor: rgb(225, 223, 221);
  --button-borderColor-disabled: transparent;

  /* TODO: Remove. Accent should only be defined in the theme. */
  --accent-fill: rgb(98, 100, 167);
  --accent-fill-hover: rgb(88, 90, 150);
  --accent-fill-focus: var(--accent-fill);
  --accent-fill-active: rgb(70, 71, 117);
  --accent-fill-disabled: var(--accent-hover);
  --accent-text: white;
  --accent-text-hover: var(--accent-text);
  --accent-text-focus: var(--accent-text);
  --accent-text-active: var(--accent-text);
  --accent-text-disabled: rgb(200, 198, 196);
  --accent-borderColor: transparent;
}

/* slots */
.root {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  position: relative;
  outline: none;
  user-select: none;
  white-space: nowrap;

  border-radius: var(--button-borderRadius);
  padding: var(--button-padding);

  box-shadow: var(--button-boxShadow);

  background: var(--button-fill);
  color: var(--button-text);

  border-style: solid;
  border-width: var(--button-borderWidth);
  border-color: var(--button-borderColor);
  height: var(--button-height);

  transition: var(--button-transition);
}

.content {
  font-family: var(--button-fontFamily);
  font-size: var(--button-fontSize);
  font-weight: var(--button-fontWeight);
}

.icon {
  color: var(--button-icon, var(--button-text));
  display: inline-block;
  width: var(--button-iconSize);
  height: var(--b utton-iconSize);
}

.loader {
  /* TODO: styling once we have a sample. */
}

/* selectors */

.root > *:not(:first-child) {
  margin-left: var(--button-contentGap);
}

.root:hover {
  background-color: var(--button-fill-hover, var(--button-fill));
  color: var(--button-text-hover, var(--button-text));
  border-color: var(--button-borderColor-hover, var(--button-borderColor));
  box-shadow: var(--button-boxShadow-hover, var(--button-boxShadow));

  .icon {
    color: var(--button-icon-hover, var(--button-text-hover));
  }
}

.root:active {
  background-color: var(--button-fill-active, var(--button-fill-hover));
  color: var(--button-text-active, var(--button-text-hover));
  border-color: var(--button-borderColor-active, var(--button-borderColor-hover, var(--button-borderColor)));
  box-shadow: var(--button-boxShadow-active, var(--button-boxShadow-hover, var(--button-boxShadow)));

  transform: var(--button-transform-active);
  transition: var(--button-transition-active);

  .icon {
    color: var(--button-icon-active, var(--button-text-active));
  }
}

.root:focus::after {
  position: absolute;
  left: -1px;
  top: -1px;
  right: -1px;
  bottom: -1px;
  content: '';
  box-sizing: border-box;
  border-radius: var(--button-borderRadius);
  box-shadow: 0 0 0 var(--button-focusInnerWidth, 1px) var(--button-focusInner, var(--accent-text)) inset;
  border: var(--button-focusWidth, 2px) solid var(--button-focus, var(--accent-fill));
}

/* modifiers */

.primary {
  --button-fill: var(--accent-fill);
  --button-fill-hover: var(--accent-fill-hover);
  --button-fill-active: var(--accent-fill-active);

  --button-text: var(--accent-text);
  --button-text-hover: var(--accent-text-hover);
  --button-text-active: var(--accent-text-active);

  --button-borderColor: var(--accent-borderColor);
}

.iconOnly {
  width: var(--button-height);
  --button-padding: 0;
}

.circular {
  --button-borderRadius: 50000px;
  --button-minWidth: var(--button-height);
}

.fluid {
  width: 100%;
  max-width: 100%;
}

.disabled {
  pointer-events: none;
  background-color: var(--button-fill-disabled);
  color: var(--button-text-disabled);
  border-color: var(--button-borderColor-disabled);
  box-shadow: var(--button-boxShadow-disabled);

  .icon {
    color: var(--button-icon-disabled, var(--button-text-disabled));
  }
}

.size_smallest {
  --button-height: var(--button-size-smallest, 16px);
}
.size_smaller {
  --button-height: var(--button-size-smaller, 20px);
}
.size_small {
  --button-height: var(--button-size-small, 24px);
}
.size_large {
  --button-height: var(--button-size-large, 40px);
}
.size_larger {
  --button-height: var(--button-size-larger, 48px);
}
.size_largest {
  --button-height: var(--button-size-largest, 64px);
}
