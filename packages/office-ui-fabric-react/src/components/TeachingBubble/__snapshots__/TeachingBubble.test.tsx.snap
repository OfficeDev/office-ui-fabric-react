// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TeachingBubble renders TeachingBubble correctly 1`] = `
<div
  className=
      ms-Callout-container
      {
        position: relative;
      }
  style={undefined}
>
  <div
    className=
        ms-Callout
        ms-TeachingBubble
        specialClassName
        {
          border-color: #eaeaea;
          border-style: solid;
          border-width: 1px;
          box-shadow: 0 0 5px 0px rgba(0,0,0,0.4);
          box-sizing: border-box;
          outline: transparent;
          position: absolute;
        }
        @media screen and (-ms-high-contrast: active){& {
          border-color: WindowText;
          border-style: solid;
          border-width: 1px;
        }
        &::-moz-focus-inner {
          border: 0px;
        }
    style={
      Object {
        "filter": "opacity(0)",
        "opacity": 0,
      }
    }
    tabIndex={-1}
  >
    <div
      aria-describedby={undefined}
      aria-label={undefined}
      aria-labelledby={undefined}
      className=
          ms-Callout-main
          {
            background-color: #ffffff;
            overflow-x: hidden;
            overflow-y: auto;
            position: relative;
          }
      onKeyDown={[Function]}
      onScroll={undefined}
      role={undefined}
      style={
        Object {
          "maxHeight": 750,
          "overflowY": undefined,
        }
      }
    >
      <div
        className="ms-TeachingBubble-content"
      >
        <div
          className="ms-TeachingBubble-bodycontent"
        >
          <div
            className="ms-TeachingBubble-body"
          >
            <p
              className="ms-TeachingBubble-subText"
            >
              Test Content
            </p>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`TeachingBubble renders TeachingBubbleContent correctly 1`] = `
<div
  className="ms-TeachingBubble-content"
>
  <div
    className="ms-TeachingBubble-bodycontent"
  >
    <div
      className="ms-TeachingBubble-header ms-TeachingBubble-header--large undefined"
    >
      <p
        className="ms-TeachingBubble-headline"
      >
        Test Title
      </p>
    </div>
    <div
      className="ms-TeachingBubble-body"
    >
      <p
        className="ms-TeachingBubble-subText"
      >
        Content
      </p>
    </div>
  </div>
</div>
`;

exports[`TeachingBubble renders TeachingBubbleContent with buttons correctly 1`] = `
<div
  className="ms-TeachingBubble-content"
>
  <div
    className="ms-TeachingBubble-bodycontent"
  >
    <div
      className="ms-TeachingBubble-header ms-TeachingBubble-header--large undefined"
    >
      <p
        className="ms-TeachingBubble-headline"
      >
        Test Title
      </p>
    </div>
    <div
      className="ms-TeachingBubble-body"
    >
      <p
        className="ms-TeachingBubble-subText"
      >
        Content
      </p>
    </div>
    <div
      className="ms-TeachingBubble-footer"
    >
      <button
        aria-describedby={undefined}
        aria-disabled={undefined}
        aria-label={undefined}
        aria-labelledby={undefined}
        aria-pressed={undefined}
        className=
            ms-Button
            ms-Button--primary
            ms-TeachingBubble-primaryButton
            {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              background-color: #0078d4;
              border-radius: 0px;
              border: 1px solid transparent;
              box-sizing: border-box;
              color: #ffffff;
              cursor: pointer;
              display: inline-block;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 14px;
              font-weight: 400;
              height: 32px;
              min-width: 80px;
              outline: transparent;
              padding-bottom: 0;
              padding-left: 16px;
              padding-right: 16px;
              padding-top: 0;
              position: relative;
              text-align: center;
              text-decoration: none;
              user-select: none;
              vertical-align: top;
            }
            &::-moz-focus-inner {
              border: 0;
            }
            .ms-Fabric--isFocusVisible &:focus:after {
              border: 1px solid #ffffff;
              bottom: 0px;
              content: "";
              left: 0px;
              outline: 1px solid #666666;
              position: absolute;
              right: 0px;
              top: 0px;
              z-index: 1;
            }
            @media screen and (-ms-high-contrast: active){.ms-Fabric--isFocusVisible &:focus:after {
              border: none;
              bottom: -2px;
              left: -2px;
              outline-color: ButtonText;
              right: -2px;
              top: -2px;
            }
            @media screen and (-ms-high-contrast: active){& {
              -ms-high-contrast-adjust: none;
              background-color: WindowText;
              color: Window;
            }
            &:hover {
              background-color: #106ebe;
              color: #ffffff;
            }
            @media screen and (-ms-high-contrast: active){&:hover {
              background-color: Highlight;
              color: Window;
            }
            &:active {
              background-color: #005a9e;
              color: #ffffff;
            }
            @media screen and (-ms-high-contrast: active){&:active {
              -ms-high-contrast-adjust: none;
              background-color: WindowText;
              color: Window;
            }
        data-is-focusable={true}
        disabled={undefined}
        onClick={[Function]}
        onKeyDown={[Function]}
        onKeyPress={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseUp={[Function]}
        type="button"
      >
        <div
          className=
              ms-Button-flexContainer
              {
                align-items: center;
                display: flex;
                flex-wrap: nowrap;
                height: 100%;
                justify-content: center;
              }
        >
          <div
            className=
                ms-Button-textContainer
                {
                  flex-grow: 1;
                }
          >
            <div
              className=
                  ms-Button-label
                  {
                    font-weight: 600;
                    line-height: 100%;
                    margin-bottom: 0;
                    margin-left: 4px;
                    margin-right: 4px;
                    margin-top: 0;
                  }
              id="id__0"
            >
              Test Primary Button
            </div>
          </div>
        </div>
      </button>
      <button
        aria-describedby={undefined}
        aria-disabled={undefined}
        aria-label={undefined}
        aria-labelledby={undefined}
        aria-pressed={undefined}
        className=
            ms-Button
            ms-Button--default
            ms-TeachingBubble-secondaryButton
            {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              background-color: #f4f4f4;
              border-radius: 0px;
              border: 1px solid transparent;
              box-sizing: border-box;
              color: #333333;
              cursor: pointer;
              display: inline-block;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 14px;
              font-weight: 400;
              height: 32px;
              min-width: 80px;
              outline: transparent;
              padding-bottom: 0;
              padding-left: 16px;
              padding-right: 16px;
              padding-top: 0;
              position: relative;
              text-align: center;
              text-decoration: none;
              user-select: none;
              vertical-align: top;
            }
            &::-moz-focus-inner {
              border: 0;
            }
            .ms-Fabric--isFocusVisible &:focus:after {
              border: 1px solid #ffffff;
              bottom: 0px;
              content: "";
              left: 0px;
              outline: 1px solid #666666;
              position: absolute;
              right: 0px;
              top: 0px;
              z-index: 1;
            }
            @media screen and (-ms-high-contrast: active){.ms-Fabric--isFocusVisible &:focus:after {
              border: none;
              bottom: -2px;
              left: -2px;
              outline-color: ButtonText;
              right: -2px;
              top: -2px;
            }
            &:hover {
              background-color: #eaeaea;
              color: #000000;
            }
            @media screen and (-ms-high-contrast: active){&:hover {
              border-color: Highlight;
              color: Highlight;
            }
            &:active {
              background-color: #c8c8c8;
              color: #212121;
            }
        data-is-focusable={true}
        disabled={undefined}
        onClick={[Function]}
        onKeyDown={[Function]}
        onKeyPress={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseUp={[Function]}
        type="button"
      >
        <div
          className=
              ms-Button-flexContainer
              {
                align-items: center;
                display: flex;
                flex-wrap: nowrap;
                height: 100%;
                justify-content: center;
              }
        >
          <div
            className=
                ms-Button-textContainer
                {
                  flex-grow: 1;
                }
          >
            <div
              className=
                  ms-Button-label
                  {
                    font-weight: 600;
                    line-height: 100%;
                    margin-bottom: 0;
                    margin-left: 4px;
                    margin-right: 4px;
                    margin-top: 0;
                  }
              id="id__3"
            >
              Test Secondary Button
            </div>
          </div>
        </div>
      </button>
    </div>
  </div>
  <button
    aria-describedby={undefined}
    aria-disabled={undefined}
    aria-label={undefined}
    aria-labelledby={undefined}
    aria-pressed={undefined}
    className=
        ms-Button
        ms-Button--icon
        ms-TeachingBubble-closebutton
        {
          -moz-osx-font-smoothing: grayscale;
          -webkit-font-smoothing: antialiased;
          background-color: transparent;
          border-radius: 0px;
          border: 1px solid transparent;
          box-sizing: border-box;
          cursor: pointer;
          display: inline-block;
          font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
          font-size: 14px;
          font-weight: 400;
          height: 32px;
          outline: transparent;
          padding-bottom: 0;
          padding-left: 4px;
          padding-right: 4px;
          padding-top: 0;
          position: relative;
          text-align: center;
          text-decoration: none;
          user-select: none;
          vertical-align: top;
          width: 32px;
        }
        &::-moz-focus-inner {
          border: 0;
        }
        .ms-Fabric--isFocusVisible &:focus:after {
          border: 1px solid #ffffff;
          bottom: 0px;
          content: "";
          left: 0px;
          outline: 1px solid #666666;
          position: absolute;
          right: 0px;
          top: 0px;
          z-index: 1;
        }
        @media screen and (-ms-high-contrast: active){.ms-Fabric--isFocusVisible &:focus:after {
          border: none;
          bottom: -2px;
          left: -2px;
          outline-color: ButtonText;
          right: -2px;
          top: -2px;
        }
        &:hover {
          color: #004578;
        }
        @media screen and (-ms-high-contrast: active){&:hover {
          border-color: Highlight;
          color: Highlight;
        }
        &:active {
          color: #0078d4;
        }
    data-is-focusable={true}
    disabled={undefined}
    onClick={[Function]}
    onKeyDown={[Function]}
    onKeyPress={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseUp={[Function]}
    title={undefined}
    type="button"
  >
    <div
      className=
          ms-Button-flexContainer
          {
            align-items: center;
            display: flex;
            flex-wrap: nowrap;
            height: 100%;
            justify-content: center;
          }
    >
      <i
        aria-hidden={true}
        className=
            ms-Button-icon
            {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              display: inline-block;
              flex-shrink: 0;
              font-family: "FabricMDL2Icons";
              font-size: 16px;
              font-style: normal;
              font-weight: normal;
              height: 16px;
              line-height: 16px;
              margin-bottom: 0;
              margin-left: 4px;
              margin-right: 4px;
              margin-top: 0;
              speak: none;
              text-align: center;
              vertical-align: middle;
            }
        data-icon-name="Cancel"
        role="presentation"
      >
        
      </i>
    </div>
  </button>
</div>
`;

exports[`TeachingBubble renders TeachingBubbleContent with condensed headline correctly 1`] = `
<div
  className="ms-TeachingBubble-content"
>
  <div
    className="ms-TeachingBubble-bodycontent"
  >
    <div
      className="ms-TeachingBubble-header ms-TeachingBubble-header--condensed undefined"
    >
      <p
        className="ms-TeachingBubble-headline"
      >
        Test Title
      </p>
    </div>
    <div
      className="ms-TeachingBubble-body"
    >
      <p
        className="ms-TeachingBubble-subText"
      >
        Content
      </p>
    </div>
  </div>
</div>
`;

exports[`TeachingBubble renders TeachingBubbleContent with image correctly 1`] = `
<div
  className="ms-TeachingBubble-content"
>
  <div
    className="ms-TeachingBubble-header ms-TeachingBubble-image"
  >
    <div
      className=
          ms-Image
          {
            overflow: hidden;
          }
      style={
        Object {
          "height": undefined,
          "width": undefined,
        }
      }
    >
      <img
        alt={undefined}
        className=
            ms-Image-image
            ms-Image-image--portrait
            is-notLoaded
            is-fadeIn
            {
              display: block;
              opacity: 0;
            }
        onError={[Function]}
        onLoad={[Function]}
        role={undefined}
        src="test image url"
      />
    </div>
  </div>
  <div
    className="ms-TeachingBubble-bodycontent"
  >
    <div
      className="ms-TeachingBubble-header ms-TeachingBubble-header--large undefined"
    >
      <p
        className="ms-TeachingBubble-headline"
      >
        Test Title
      </p>
    </div>
    <div
      className="ms-TeachingBubble-body"
    >
      <p
        className="ms-TeachingBubble-subText"
      >
        Content
      </p>
    </div>
  </div>
</div>
`;

exports[`TeachingBubble renders TeachingBubbleContent with small headline correctly 1`] = `
<div
  className="ms-TeachingBubble-content"
>
  <div
    className="ms-TeachingBubble-bodycontent"
  >
    <div
      className="ms-TeachingBubble-header ms-TeachingBubble-header--small undefined"
    >
      <p
        className="ms-TeachingBubble-headline"
      >
        Test Title
      </p>
    </div>
    <div
      className="ms-TeachingBubble-body"
    >
      <p
        className="ms-TeachingBubble-subText"
      >
        Content
      </p>
    </div>
  </div>
</div>
`;
