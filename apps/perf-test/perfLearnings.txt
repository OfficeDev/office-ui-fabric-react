
1. Existing Perf Issues
  * See attached HTMLs for analysis
  * Baseline differences between reference (website) and local
    * Website was using React debug vs. local using React production, causing a 2x difference in results.
  * High level of variance in results
    * Tried tightening variance by using V8 flags to control optimization and sandboxing.
    * Variance was tightened but there are still routinely wild variances that make reported results unreliable.

  * Learnings
    * Perf test package was highly unreliable and should not have been used or reported on PRs.
    * Performance test packages should always be characterized for:
      * Consistency between reference and target
      * Variance known and accounted for (or clearly presented)


2. Conversion to V8 profiling

  * Flame Graph
    * initial samples showed obvious areas of low hanging fruit that could be improved
      * string replace with regex in 2 spots was consuming 30% of the time in mergeStyles!

3. Results
  * use mergeStyles PRs as references and before/after comparison
    * https://github.com/OfficeDev/office-ui-fabric-react/pull/9419
    * https://github.com/OfficeDev/office-ui-fabric-react/pull/9460
    * https://github.com/OfficeDev/office-ui-fabric-react/pull/9437

4. Links
  * https://benchling.engineering/a-deep-dive-into-react-perf-debugging-fd2063f5a667
  * https://benchling.engineering/performance-engineering-with-react-e03013e53285
  * https://engineering.musefind.com/how-to-benchmark-react-components-the-quick-and-dirty-guide-f595baf1014c
