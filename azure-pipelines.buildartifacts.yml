parameters:
  artifact: ''
  buildId: ''

# Download and extract build artifacts
steps:
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'specific'
      project: cd9e4e13-b8db-429a-9c21-499bf1c98639
      pipeline: 84
      #specificBuildWithTriggering: false # Optional
      #buildVersionToDownload: 'latest' # Required when buildType == Specific. Options: latest, latestFromBranch, specific
      #allowPartiallySucceededBuilds: false # Optional
      #branchName: 'refs/heads/master' # Required when buildType == Specific && BuildVersionToDownload == LatestFromBranch
      buildId: ${{ parameters.buildId }}
      #tags: # Optional
      #downloadType: 'single' # Choose whether to download a single artifact or all artifacts of a specific build. Options: single, specific
      artifactName: ${{ parameters.artifact }}
      #itemPattern: '**' # Optional
      #downloadPath: '$(System.ArtifactsDirectory)'
      #parallelizationLimit: '8' # Optional

  - task: ExtractFiles@1
    inputs:
      # By default, input patterns start in the root folder of the repo (same as if you had specified $(Build.SourcesDirectory)).
      # It'd be nice to use path variables here, but this task's inputs use relative pathing.
      # Artifacts are downloaded by named directories into $(Pipeline.Workspace) by default, which is one directory up.
      archiveFilePatterns: '../Build/*.tar.gz'
      # Extract into $(Pipeline.Workspace). Archive should include root folder so that contents get extracted into proper subdirectories.
      destinationFolder: '..'
      cleanDestinationFolder: false
