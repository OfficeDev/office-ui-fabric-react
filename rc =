[1mdiff --git a/packages/experiments/src/components/Chiclet/Chiclet.types.ts b/packages/experiments/src/components/Chiclet/Chiclet.types.ts[m
[1mindex 2d0c97830..3ead1cd76 100644[m
[1m--- a/packages/experiments/src/components/Chiclet/Chiclet.types.ts[m
[1m+++ b/packages/experiments/src/components/Chiclet/Chiclet.types.ts[m
[36m@@ -2,7 +2,7 @@[m [mimport * as React from 'react';[m
 import { IStyleFunctionOrObject, IRefObject } from '../../Utilities';[m
 import { IStyle, ITheme } from '../../Styling';[m
 [m
[31m-export interface IChiclet {}[m
[32m+[m[32mexport interface IChiclet { }[m
 [m
 export interface IChicletProps extends React.HTMLAttributes<HTMLElement> {[m
   /**[m
[36m@@ -49,12 +49,12 @@[m [mexport interface IChicletProps extends React.HTMLAttributes<HTMLElement> {[m
   /**[m
    * Image Width to render for the component.[m
    */[m
[31m-  imageWidth?: string;[m
[32m+[m[32m  imageWidth?: number | string;[m
 [m
   /**[m
    * Image Height to render for the component.[m
    */[m
[31m-  imageHeight?: string;[m
[32m+[m[32m  imageHeight?: number | string;[m
 [m
   /**[m
    * Alternate image to render for the component.[m
[36m@@ -64,7 +64,7 @@[m [mexport interface IChicletProps extends React.HTMLAttributes<HTMLElement> {[m
   /**[m
    * Icon to render for the component.[m
    */[m
[31m-  itemType?: string;[m
[32m+[m[32m  itemType?: 'word' | 'docx' | 'powerpoint' | 'pptx' | 'excel' | 'xlsx';[m
 [m
   /**[m
    * Function to call when the card is clicked.[m
[1mdiff --git a/packages/experiments/src/components/Chiclet/examples/Chiclet.Footer.Example.tsx b/packages/experiments/src/components/Chiclet/examples/Chiclet.Footer.Example.tsx[m
[1mindex 6643b3c3f..9f7cc5663 100644[m
[1m--- a/packages/experiments/src/components/Chiclet/examples/Chiclet.Footer.Example.tsx[m
[1m+++ b/packages/experiments/src/components/Chiclet/examples/Chiclet.Footer.Example.tsx[m
[36m@@ -6,10 +6,6 @@[m [mimport { mergeStyles } from '@uifabric/merge-styles/lib/mergeStyles';[m
 const TEST_URL = 'http://fabricweb.z5.web.core.windows.net/pr-deploy-site/refs/heads/master/chiclet-test.html';[m
 [m
 export class FooterComponent extends React.Component<IFooterComponent, {}> {[m
[31m-  constructor(props: IFooterComponent) {[m
[31m-    super(props);[m
[31m-  }[m
[31m-[m
   public render(): JSX.Element {[m
     const { buttonProps, activities } = this.props;[m
 [m
[1mdiff --git a/packages/experiments/src/components/Chiclet/examples/Chiclet.Xsmall.Footer.Example.tsx b/packages/experiments/src/components/Chiclet/examples/Chiclet.Xsmall.Footer.Example.tsx[m
[1mindex b5f5bbc95..4d6d9de1a 100644[m
[1m--- a/packages/experiments/src/components/Chiclet/examples/Chiclet.Xsmall.Footer.Example.tsx[m
[1m+++ b/packages/experiments/src/components/Chiclet/examples/Chiclet.Xsmall.Footer.Example.tsx[m
[36m@@ -6,10 +6,6 @@[m [mimport { mergeStyles } from '@uifabric/merge-styles/lib/mergeStyles';[m
 const TEST_URL = 'http://fabricweb.z5.web.core.windows.net/pr-deploy-site/refs/heads/master/chiclet-test.html';[m
 [m
 export class FooterComponent extends React.Component<IFooterComponent, {}> {[m
[31m-  constructor(props: IFooterComponent) {[m
[31m-    super(props);[m
[31m-  }[m
[31m-[m
   public render(): JSX.Element {[m
     const { buttonProps, attachProp } = this.props;[m
 [m
[1mdiff --git a/packages/experiments/src/utilities/chicletHelper.tsx b/packages/experiments/src/utilities/chicletHelper.tsx[m
[1mindex f7f14bcb8..6b22aa01f 100644[m
[1m--- a/packages/experiments/src/utilities/chicletHelper.tsx[m
[1m+++ b/packages/experiments/src/utilities/chicletHelper.tsx[m
[36m@@ -6,8 +6,8 @@[m [mconst ASSET_CDN_BASE_URL = 'https://static2.sharepointonline.com/files/fabric/as[m
 [m
 export function renderPreview([m
   imageUrl?: string,[m
[31m-  imageHeight?: string,[m
[31m-  imageWidth?: string,[m
[32m+[m[32m  imageHeight?: string | number,[m
[32m+[m[32m  imageWidth?: string | number,[m
   imageAlt?: string[m
 ): React.ReactElement<React.HTMLAttributes<HTMLDivElement>> | undefined {[m
   let image;[m
[36m@@ -26,10 +26,10 @@[m [mexport function renderIcon([m
   let icon;[m
 [m
   if (itemType && !imageProvided) {[m
[31m-    src = `${ASSET_CDN_BASE_URL}/brand-icons/product/svg/` + itemType + `_16x1_5.svg`;[m
[32m+[m[32m    src = `${ASSET_CDN_BASE_URL}/brand-icons/product/svg/${itemType}_16x1_5.svg`;[m
     icon = <img className={style} src={src} />;[m
     switch ([m
[31m-      itemType // for "hero" apps, we'll use the app icons[m
[32m+[m[32m    itemType // for "hero" apps, we'll use the app icons[m
     ) {[m
       case 'word':[m
       case 'docx':[m
