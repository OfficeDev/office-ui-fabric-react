import { renderHook } from 'react-hooks-testing-library';
import { use{{componentName}}State } from './{{componentName}}.state';

describe('{{componentName}}State', () => {
  test('should fall back to default values', () => {
    const { result } = renderHook(() => use{{componentName}}State({}));
    expect(result.current.status).toBe('State Text');
    expect(result.current.text).toBe('Default Text');
  });

  test('should use default prop value', () => {
    const { result } = renderHook(() => use{{componentName}}State({ defaultText: 'defaultPropValue' }));
    expect(result.current.text).toBe('defaultPropValue');
  });

  test('should give prop value highest priority', () => {
    const { result } = renderHook(() => use{{componentName}}State({ text: 'propValue', defaultText: 'defaultPropValue' }));
    expect(result.current.text).toBe('propValue');
  });
});
